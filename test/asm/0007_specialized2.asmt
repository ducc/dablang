## CODE

func foo(a)
{
  print(a.class);
}

func bar()
{
  foo("str");
}

## OPTIONS

--opt

## EXPECT

/* 0            */               CONSTANT_STRING "LiteralString"
/* 1            */               CONSTANT_STRING "str"
/* 2            */               CONSTANT_SYMBOL __foo_LiteralString
/* 3            */               CONSTANT_SYMBOL class
 
/*              */               LOAD_FUNCTION L3, foo, -1
/*              */               LOAD_FUNCTION L4, bar, -1
/*              */               LOAD_FUNCTION L5, __foo_LiteralString, -1
 
/*              */               BREAK_LOAD 
 
/*              */               /* f: foo */ 
/*              */ L3          : STACK_RESERVE 0
/*              */ L2          : PUSH_ARG 0
/* class        */               PUSH_CONSTANT 3
/* .class       */               INSTCALL 0, 1
/*              */               KERNELCALL 0
/*              */               PUSH_NIL 
/*              */               RETURN 1
 
/*              */               /* f: bar */ 
/*              */ L4          : STACK_RESERVE 0
/* str          */ L1          : PUSH_CONSTANT 1
/* __foo_Litera */               PUSH_CONSTANT 2
/* __foo_Litera */               HARDCALL 1, 1
/*              */               PUSH_NIL 
/*              */               RETURN 1
 
/*              */               /* f: __foo_LiteralString */ 
/*              */ L5          : STACK_RESERVE 0
/* LiteralStri  */ L0          : PUSH_CONSTANT 0
/*              */               KERNELCALL 0
/*              */               PUSH_NIL 
/*              */               RETURN 1
