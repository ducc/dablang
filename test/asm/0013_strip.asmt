## CODE

func foo(a)
{
  if (a is String)
  {
    print("got string");
  }
  if (a is Fixnum)
  {
    print("got fixnum");
  }
}

func bar()
{
  foo("str");
  foo(12);
}

## OPTIONS

--opt --strip --entry=bar

## EXPECT

/* 0            */               CONSTANT_STRING "got fixnum"
/* 1            */               CONSTANT_STRING "got string"
/* 2            */               CONSTANT_STRING "str"
/* 3            */               CONSTANT_NUMBER 12
/* 4            */               CONSTANT_SYMBOL __foo_LiteralFixnum
/* 5            */               CONSTANT_SYMBOL __foo_LiteralString
 
/*              */               LOAD_FUNCTION L16, bar, -1
/*              */               LOAD_FUNCTION L17, __foo_LiteralString, -1
/*              */               LOAD_FUNCTION L18, __foo_LiteralFixnum, -1
 
/*              */               BREAK_LOAD 
 
/*              */               /* f: bar */ 
/*              */ L16         : STACK_RESERVE 0
/* str          */ L5          : PUSH_CONSTANT 2
/* __foo_Litera */               PUSH_CONSTANT 5
/* __foo_Litera */               HARDCALL 1, 1
/* 12           */               PUSH_CONSTANT 3
/* __foo_Litera */               PUSH_CONSTANT 4
/* __foo_Litera */               HARDCALL 1, 1
/*              */               PUSH_NIL 
/*              */               RETURN 1
 
/*              */               /* f: __foo_LiteralString */ 
/*              */ L17         : STACK_RESERVE 0
/* got string   */ L2          : PUSH_CONSTANT 1
/*              */               KERNELCALL 0
/*              */               PUSH_NIL 
/*              */               RETURN 1
 
/*              */               /* f: __foo_LiteralFixnum */ 
/*              */ L18         : STACK_RESERVE 0
/* got fixnum   */ L9          : PUSH_CONSTANT 0
/*              */               KERNELCALL 0
/*              */               PUSH_NIL 
/*              */               RETURN 1
